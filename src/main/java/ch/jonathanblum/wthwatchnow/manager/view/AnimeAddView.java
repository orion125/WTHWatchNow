/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ch.jonathanblum.wthwatchnow.manager.view;

import ch.jonathanblum.wthwatchnow.manager.model.Anime;
import java.text.SimpleDateFormat;

/**
 *
 * @author Jonathan Blum
 */
public class AnimeAddView extends javax.swing.JInternalFrame {
    private Anime currentAnime;

    /**
     * Creates new form AnimeView
     * @param anime
     */
    public AnimeAddView(Anime anime) {
        super("Anime", false, false, false, false);
        pack();
        setBorder(null);
        initComponents();
        changeAnime(anime);
    }
    
    public final void changeAnime(Anime next) {
        currentAnime = next;
        initData();
    }
    
    protected void initData() {
        if(currentAnime == null) 
            return;
        setTitle(currentAnime.getTitle());
        setStatus();
        setSynopsis();
        setGenres();
        setProducers();
        setProgress();
        setDates();
        
    }
    
    protected void setStatus() {
        String str = "Status: ";/*
        switch(currentAnime.getStatus()) {
            case 0: str += "Terminé"; break;
            case 1: str += "En cours"; break;
            case 2: str += "Planifié"; break;
            case 3: str += "TBA"; break;
            default: str+= "inconnu";
        }*/
        lbStatus.setText(str + currentAnime.getStatus());
    }
    
    protected void setSynopsis() {
        taSynopsis.setText(currentAnime.getSynopsis());
    }
    protected void setGenres() {
        lbGenres.setText("Genres : " + String.join(", ", currentAnime.getGenres()));
    }
    protected void setProducers() {
        lbProducers.setText("Producteurs : " + String.join(", ", currentAnime.getProducers()));
    }

    protected void setProgress() {
        pbar1.setMaximum(currentAnime.getMaxEp());
        pbar2.setMaximum(currentAnime.getMaxEp());
        pbar3.setMaximum(currentAnime.getMaxEp());
        pbar1.setValue(currentAnime.getAiredEp());
        if(currentAnime.getDlEp() > 0) {
            pbar2.setValue(currentAnime.getDlEp());
            pbar3.setValue(currentAnime.getViewedEp());
            pbar3.setVisible(true);
        } else {
            pbar2.setValue(currentAnime.getViewedEp());
            pbar3.setVisible(false); 
        }
    }
    
    protected void setDates() {
        String date;
        SimpleDateFormat sdf = new SimpleDateFormat("d MMM yyyy");
        if(currentAnime.getAiringDate() != null)
            lbAiringDate.setText("Début : " + sdf.format(currentAnime.getAiringDate()));
        else 
            lbAiringDate.setText("Début: inconnu");
        if(currentAnime.getEndDate() != null)
           lbEndDate.setText("Fin : " + sdf.format(currentAnime.getEndDate()));
        else
           lbEndDate.setText("Fin: inconnu");
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabpAnime = new javax.swing.JTabbedPane();
        pAnimeInfo = new javax.swing.JPanel();
        lbPreview = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taSynopsis = new javax.swing.JTextArea();
        lbStatus = new javax.swing.JLabel();
        lbProducers = new javax.swing.JLabel();
        lbGenres = new javax.swing.JLabel();
        pbar1 = new javax.swing.JProgressBar();
        pbar2 = new javax.swing.JProgressBar();
        pbar3 = new javax.swing.JProgressBar();
        lbProgress = new javax.swing.JLabel();
        lbAiringDate = new javax.swing.JLabel();
        lbEndDate = new javax.swing.JLabel();
        pAnimeEpisodes = new javax.swing.JPanel();

        lbPreview.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/empty.jpg"))); // NOI18N
        lbPreview.setText("jLabel1");

        jScrollPane1.setOpaque(true);

        taSynopsis.setColumns(20);
        taSynopsis.setFont(new java.awt.Font("DejaVu Sans", 2, 12)); // NOI18N
        taSynopsis.setForeground(new java.awt.Color(153, 153, 153));
        taSynopsis.setLineWrap(true);
        taSynopsis.setRows(5);
        taSynopsis.setText("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed eu mauris quis felis scelerisque condimentum vel facilisis turpis. In lacinia ipsum vel purus suscipit faucibus. Nam eget sagittis neque. Vestibulum id dictum leo, eu cursus neque. Pellentesque a pulvinar nisl, id fermentum turpis. Donec tincidunt massa at lorem viverra, vitae pulvinar urna condimentum. Mauris et lorem non ipsum ullamcorper lacinia non ut tellus. Sed imperdiet non arcu elementum convallis. Pellentesque vestibulum felis vitae lorem sollicitudin maximus. Sed eget massa urna. Maecenas pulvinar lorem quis nulla egestas egestas. Praesent tempus nibh ex. In nec lobortis felis. Fusce scelerisque massa vel suscipit dapibus. ");
        taSynopsis.setWrapStyleWord(true);
        taSynopsis.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        taSynopsis.setEnabled(false);
        taSynopsis.setMargin(new java.awt.Insets(5, 5, 5, 5));
        taSynopsis.setMinimumSize(new java.awt.Dimension(400, 200));
        taSynopsis.setName(""); // NOI18N
        taSynopsis.setPreferredSize(new java.awt.Dimension(800, 200));
        jScrollPane1.setViewportView(taSynopsis);

        lbStatus.setText("Status : To Be Announced");

        lbProducers.setText("Producteurs : ");

        lbGenres.setText("Genres :");

        pbar1.setMaximum(24);
        pbar1.setToolTipText("Épisodes parus");
        pbar1.setValue(20);
        pbar1.setMinimumSize(new java.awt.Dimension(10, 20));
        pbar1.setPreferredSize(new java.awt.Dimension(150, 20));
        pbar1.setRequestFocusEnabled(false);

        pbar2.setForeground(new java.awt.Color(255, 153, 0));
        pbar2.setMaximum(24);
        pbar2.setToolTipText("Épisodes téléchargés");
        pbar2.setValue(13);

        pbar3.setForeground(new java.awt.Color(51, 204, 0));
        pbar3.setMaximum(24);
        pbar3.setToolTipText("Épisodes vus");
        pbar3.setValue(12);
        pbar3.setMinimumSize(new java.awt.Dimension(10, 20));
        pbar3.setPreferredSize(new java.awt.Dimension(150, 20));

        lbProgress.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        lbProgress.setText("Progression");

        lbAiringDate.setText("Début:");

        lbEndDate.setText("Fin:");

        javax.swing.GroupLayout pAnimeInfoLayout = new javax.swing.GroupLayout(pAnimeInfo);
        pAnimeInfo.setLayout(pAnimeInfoLayout);
        pAnimeInfoLayout.setHorizontalGroup(
            pAnimeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAnimeInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAnimeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pAnimeInfoLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(pAnimeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbGenres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbProducers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbAiringDate)
                            .addComponent(lbEndDate))
                        .addGroup(pAnimeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pAnimeInfoLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(pAnimeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pAnimeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(pbar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(pbar2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(pbar3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pAnimeInfoLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lbProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pAnimeInfoLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbPreview, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pAnimeInfoLayout.setVerticalGroup(
            pAnimeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAnimeInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAnimeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(lbPreview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pAnimeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbStatus)
                    .addComponent(lbProgress))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pAnimeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pAnimeInfoLayout.createSequentialGroup()
                        .addComponent(pbar1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pbar2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pbar3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pAnimeInfoLayout.createSequentialGroup()
                        .addComponent(lbAiringDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbEndDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(lbProducers)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbGenres)))
                .addContainerGap())
        );

        tabpAnime.addTab("Info", pAnimeInfo);

        javax.swing.GroupLayout pAnimeEpisodesLayout = new javax.swing.GroupLayout(pAnimeEpisodes);
        pAnimeEpisodes.setLayout(pAnimeEpisodesLayout);
        pAnimeEpisodesLayout.setHorizontalGroup(
            pAnimeEpisodesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 746, Short.MAX_VALUE)
        );
        pAnimeEpisodesLayout.setVerticalGroup(
            pAnimeEpisodesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 368, Short.MAX_VALUE)
        );

        tabpAnime.addTab("Épisodes", pAnimeEpisodes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabpAnime)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabpAnime, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbAiringDate;
    private javax.swing.JLabel lbEndDate;
    private javax.swing.JLabel lbGenres;
    private javax.swing.JLabel lbPreview;
    private javax.swing.JLabel lbProducers;
    private javax.swing.JLabel lbProgress;
    private javax.swing.JLabel lbStatus;
    private javax.swing.JPanel pAnimeEpisodes;
    private javax.swing.JPanel pAnimeInfo;
    private javax.swing.JProgressBar pbar1;
    private javax.swing.JProgressBar pbar2;
    private javax.swing.JProgressBar pbar3;
    private javax.swing.JTextArea taSynopsis;
    private javax.swing.JTabbedPane tabpAnime;
    // End of variables declaration//GEN-END:variables
}
